<?php 
require_once APPPATH . '/libraries/payload.php';

/**
 * Class Notifications
 *
 * @property Notify_model $notify_model
 */

class Notifications extends MY_Controller
{


	public function __construct()
	{
		parent::__construct();
		//Do your magic here
		//$this->output->enable_profiler(TRUE);
        $this->load->model('notify_model');
		$this->load->vars();
	}
	

	// Notifications
	function index()
	{
		// Load Notification Model
		$this->load->model('client_m');
		$this->load->model('invoice_model');
		$this->load->library('email');
		$account_id = $this->session->userdata('account_id');
		
		$invoice = $this->invoice_model->get_invoices_unpaid();

        $notifications = $this->notify_model->get_messages($account_id);
		/*
		$error = false;
		$today = date('j F Y H:i');
		
		$client = $this->client_m->get_account_for_notifications();
		$user = $this->client_m->get_user_infofor_notifications();


		$send_notification = $client->hour_rate;
		$tolerance = $client->tolerance_rate;
		$email_notice = $client->email_notifications;

		$this->client_m->update_messages();
		
		// Gets 1st day of month then 31 days after
		$first = date('d-m-Y', mktime(0, 0, 0, date('m'), date('01'), date('Y')));
		$last  = date('d-m-Y',mktime(0, 0, 0, date("m")  , date("d")+31, date("Y")));

		$rate = $this->client_m->fetch_rate();
		$rt = $rate->hour_rate;
		*/

		//$rate = R::findOne('account', 'hour_rate=?', array($rate));
	
		//if ($existing > $existing) throw new Exception('More than');
		//if ($existing < $existing) throw new Exception('Less then');


		/* Uncomment once all tested
		if ($send_notification == 0 && $send_notification != 1 && $first != $last && $email_notice != 0) {
			// Email the user
			$config['mailtype'] = 'html';
			$config['charset'] = 'iso-8859-1';
			$config['wordwrap'] = TRUE;

			$this->email->initialize($config);


			// All fields for email		
			$name  = $user->first_name;
			$email = $user->email;
			$logo  = base_url().'images/logo-mpdf.png';
			
			$message = "<img src='$logo' /><br /><br />
						Hello $name,<br />
						You have new notifications in your Clock In Point account.<br /><br />
						Please click <a href='http://www.clockinpoint.com/admin/clients'>here</a> to login to your account.<br /><br />
						<strong>Generated by Clock In Point - $today </strong>
						<br /><br />
						<strong><a href='http://www.clockinpoint.com'>www.clockinpoint.com</a></strong>
						";
				
			
			$this->email->from('info@clockinpoint.com');
			$this->email->to('lstables1@gmail.com');
			$this->email->subject('Clock In Point - You have new notifications');
					
			$this->email->message($message);
			
			$this->email->send(); 
			$this->email->clear();
		}
		*/
		$title = 'Notifications';
		$this->load->view('account/notify', compact(
            'title','rate','client','user','account_id','today','rate','rt','first','last','invoice','notifications'
        ));
	}

    /**
     * Dismisses notifications from the listing screen
     *
     * @param int $id Notification ID
     */
    public function dismiss($id)
    {
        $notification = R::load('message', $id);
        if (!$notification) {
            show_404();
        }
        if ($notification->account_id != $this->account->id) {
            $this->auth->access_restricted();
        }

        // set our status to inactive
        $notification->status = '0';
        R::store($notification);

        redirect('/clients/notifications');
    }

    /**
     * Called by a cron on a regular basis. Triggers sending of notifications
     * that require regular email reminders
     */
    public function trigger_email_notifications()
    {
        $notifications = $this->notify_model->find_notifications_due_for_email();
        if ($notifications) {
            foreach ($notifications as $notification) {
                $this->notify_model->send_notification_email($notification);
            }
        }
        echo '---DONE---' . '<br>';
        echo '(Sent ' . count($notifications) . ' notifications)';
        exit;
    }

}